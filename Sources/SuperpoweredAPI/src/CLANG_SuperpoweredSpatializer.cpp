// CPP to C glue code generated by Sweaty on Wed Jun 13 23:03:10 2018

// NO WARRANTIES ON PRODUCTION, for experiemental purposes only.
// TODO: Class member variable *MUST* be added manually
#include "/usr/local/Superpowered/SuperpoweredSpatializer.h"
#include "CLANG_SuperpoweredSpatializer.h"
void * SuperpoweredSpatializer_new(unsigned int samplerate)
{
  return (void*)(new SuperpoweredSpatializer(samplerate));
}

void SuperpoweredSpatializer_delete(void * class_handler)
{
  delete (SuperpoweredSpatializer *)class_handler;
}

void SuperpoweredSpatializer_setSamplerate(void * class_handler,unsigned int samplerate)
{
  SuperpoweredSpatializer * real_class_handler = (SuperpoweredSpatializer *)class_handler;
  return real_class_handler->setSamplerate(samplerate);
}

int SuperpoweredSpatializer_process(void * class_handler,float* inputLeft, float* inputRight, float* outputLeft, float* outputRight, unsigned int numberOfSamples, bool outputAdd)
{
  SuperpoweredSpatializer * real_class_handler = (SuperpoweredSpatializer *)class_handler;
  return real_class_handler->process(inputLeft,inputRight,outputLeft,outputRight,numberOfSamples,outputAdd);
}

int SuperpoweredSpatializerGlobalReverb_process(float* output, unsigned int numberOfSamples)
{
  return SuperpoweredSpatializerGlobalReverb::process(output,numberOfSamples);
}

void SuperpoweredSpatializerGlobalReverb_delete(void * class_handler)
{
  delete (SuperpoweredSpatializerGlobalReverb *)class_handler;
}

void SuperpoweredSpatializerGlobalReverb_setReverbSamplerate(unsigned int samplerate)
{
  return SuperpoweredSpatializerGlobalReverb::setReverbSamplerate(samplerate);
}

void * SuperpoweredSpatializerGlobalReverb_new()
{
  return (void*)(new SuperpoweredSpatializerGlobalReverb());
}
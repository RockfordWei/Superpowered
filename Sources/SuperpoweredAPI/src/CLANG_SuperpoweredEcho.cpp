// CPP to C glue code generated by Sweaty on Wed Jun 13 23:03:10 2018

// NO WARRANTIES ON PRODUCTION, for experiemental purposes only.
// TODO: Class member variable *MUST* be added manually
#include "/usr/local/Superpowered/SuperpoweredEcho.h"
#include "CLANG_SuperpoweredEcho.h"
void SuperpoweredEcho_enable(void * class_handler,bool flag)
{
  SuperpoweredEcho * real_class_handler = (SuperpoweredEcho *)class_handler;
  return real_class_handler->enable(flag);
}

void SuperpoweredEcho_setMix(void * class_handler,float mix)
{
  SuperpoweredEcho * real_class_handler = (SuperpoweredEcho *)class_handler;
  return real_class_handler->setMix(mix);
}

void SuperpoweredEcho_reset(void * class_handler)
{
  SuperpoweredEcho * real_class_handler = (SuperpoweredEcho *)class_handler;
  return real_class_handler->reset();
}

void * SuperpoweredEcho_new(unsigned int samplerate, unsigned int maximumSamplerate)
{
  return (void*)(new SuperpoweredEcho(samplerate,maximumSamplerate));
}

void SuperpoweredEcho_setSamplerate(void * class_handler,unsigned int samplerate)
{
  SuperpoweredEcho * real_class_handler = (SuperpoweredEcho *)class_handler;
  return real_class_handler->setSamplerate(samplerate);
}

void SuperpoweredEcho_delete(void * class_handler)
{
  delete (SuperpoweredEcho *)class_handler;
}

int SuperpoweredEcho_process(void * class_handler,float* input, float* output, unsigned int numberOfFrames)
{
  SuperpoweredEcho * real_class_handler = (SuperpoweredEcho *)class_handler;
  return real_class_handler->process(input,output,numberOfFrames);
}

int SuperpoweredEcho_process(void * class_handler,float* input, float* output, unsigned int numberOfFrames, SuperpoweredFX* fx)
{
  SuperpoweredEcho * real_class_handler = (SuperpoweredEcho *)class_handler;
  return real_class_handler->process(input,output,numberOfFrames,fx);
}

int SuperpoweredDelay_process(void * class_handler,float* input, int output, SuperpoweredFX* numberOfFrames)
{
  SuperpoweredDelay * real_class_handler = (SuperpoweredDelay *)class_handler;
  return real_class_handler->process(input,output,numberOfFrames);
}

void SuperpoweredDelay_setSamplerate(void * class_handler,unsigned int samplerate)
{
  SuperpoweredDelay * real_class_handler = (SuperpoweredDelay *)class_handler;
  return real_class_handler->setSamplerate(samplerate);
}

void SuperpoweredDelay_reset(void * class_handler)
{
  SuperpoweredDelay * real_class_handler = (SuperpoweredDelay *)class_handler;
  return real_class_handler->reset();
}
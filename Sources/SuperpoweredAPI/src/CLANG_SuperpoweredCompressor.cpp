// CPP to C glue code generated by Sweaty on Wed Jun 13 23:03:10 2018

// NO WARRANTIES ON PRODUCTION, for experiemental purposes only.
// TODO: Class member variable *MUST* be added manually
#include "/usr/local/Superpowered/SuperpoweredCompressor.h"
#include "CLANG_SuperpoweredCompressor.h"
int SuperpoweredCompressor_process(void * class_handler,float* input, float* output, unsigned int numberOfSamples)
{
  SuperpoweredCompressor * real_class_handler = (SuperpoweredCompressor *)class_handler;
  return real_class_handler->process(input,output,numberOfSamples);
}

void SuperpoweredCompressor_delete(void * class_handler)
{
  delete (SuperpoweredCompressor *)class_handler;
}

void SuperpoweredCompressor_enable(void * class_handler,bool flag)
{
  SuperpoweredCompressor * real_class_handler = (SuperpoweredCompressor *)class_handler;
  return real_class_handler->enable(flag);
}

void SuperpoweredCompressor_setSamplerate(void * class_handler,unsigned int samplerate)
{
  SuperpoweredCompressor * real_class_handler = (SuperpoweredCompressor *)class_handler;
  return real_class_handler->setSamplerate(samplerate);
}

void * SuperpoweredCompressor_new(unsigned int samplerate)
{
  return (void*)(new SuperpoweredCompressor(samplerate));
}

float SuperpoweredCompressor_getGainReductionDb(void * class_handler)
{
  SuperpoweredCompressor * real_class_handler = (SuperpoweredCompressor *)class_handler;
  return real_class_handler->getGainReductionDb();
}

void SuperpoweredCompressor_reset(void * class_handler)
{
  SuperpoweredCompressor * real_class_handler = (SuperpoweredCompressor *)class_handler;
  return real_class_handler->reset();
}

void SuperpoweredCompressorProto_setSamplerate(void * class_handler,unsigned int samplerate)
{
  SuperpoweredCompressorProto * real_class_handler = (SuperpoweredCompressorProto *)class_handler;
  return real_class_handler->setSamplerate(samplerate);
}

void * SuperpoweredCompressorProto_new(unsigned int samplerate)
{
  return (void*)(new SuperpoweredCompressorProto(samplerate));
}

int SuperpoweredCompressorProto_process(void * class_handler,float* input, float* output, unsigned int numberOfSamples)
{
  SuperpoweredCompressorProto * real_class_handler = (SuperpoweredCompressorProto *)class_handler;
  return real_class_handler->process(input,output,numberOfSamples);
}

void SuperpoweredCompressorProto_reset(void * class_handler)
{
  SuperpoweredCompressorProto * real_class_handler = (SuperpoweredCompressorProto *)class_handler;
  return real_class_handler->reset();
}

float SuperpoweredCompressorProto_getGainReductionDb(void * class_handler)
{
  SuperpoweredCompressorProto * real_class_handler = (SuperpoweredCompressorProto *)class_handler;
  return real_class_handler->getGainReductionDb();
}

void SuperpoweredCompressorProto_enable(void * class_handler,bool flag)
{
  SuperpoweredCompressorProto * real_class_handler = (SuperpoweredCompressorProto *)class_handler;
  return real_class_handler->enable(flag);
}

int SuperpoweredCompressorProto_process(void * class_handler,float* input, float* sidechain, float* output, unsigned int numberOfSamples)
{
  SuperpoweredCompressorProto * real_class_handler = (SuperpoweredCompressorProto *)class_handler;
  return real_class_handler->process(input,sidechain,output,numberOfSamples);
}

void SuperpoweredCompressorProto_delete(void * class_handler)
{
  delete (SuperpoweredCompressorProto *)class_handler;
}